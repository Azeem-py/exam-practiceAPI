// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String
  password String
  Token    Token[]
}

model Token {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  accessToken  String
  refreshToken String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Title {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  Question Question[]
  Student  Student[]
  // time given to submit
  time     Int?
}

model Question {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  content       String
  questionOwner Title    @relation(fields: [titleId], references: [id])
  titleId       String   @db.ObjectId
  Option        Option[]
}

model Option {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  content       String
  is_correct    Boolean
  optionOwner   Question        @relation(fields: [questionId], references: [id])
  questionId    String          @db.ObjectId
  StudentAnswer StudentAnswer[]
}

model Student {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  title         Title           @relation(fields: [titleId], references: [id])
  titleId       String          @db.ObjectId
  StudentAnswer StudentAnswer[]
  score         Int?
}

model StudentAnswer {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  student   Student @relation(fields: [studentId], references: [id])
  studentId String  @db.ObjectId
  answer    Option  @relation(fields: [optionId], references: [id])
  optionId  String  @db.ObjectId
}
